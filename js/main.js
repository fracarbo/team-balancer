
String.prototype.toTitle = function() {
  return this.replace(/\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
}

import balanceTeams from "./balancer.js";

const { createApp } = Vue

createApp({
  data() {
    return {
      newPlayer: {
        name: '',
        value: 5
      },
      players: JSON.parse(localStorage.getItem('players')) ?? []
    }
  },
  methods: {
    addPlayer () {
      const newPlayer = {
        name: this.newPlayer.name.toTitle(),
        value: this.newPlayer.value,
        selected: true
      }
      const playerExists = this.players.find(p => p.name === newPlayer.name)
      
      if (playerExists) return alert("Player already exists!")
    
      this.players.push(newPlayer)
      this.newPlayer.name = ''
    },
    removePlayer(player) {
      this.players = this.players.filter(p => p.name !== player.name)
    },
    shareTeams() {
      const teamsText = {
        a: this.balancedTeams[0].map(p => p.name).join('\n'),
        b: this.balancedTeams[1].map(p => p.name).join('\n')
      }
      const text = `
        Team A\n${teamsText.a}\n\nTeam B\n${teamsText.b}\n\nGenerated by: ${window.location.href}`
      navigator.share({
        url: window.location.url,
        text: text
      })
    }
  },
  watch: {
    players() {
      localStorage.setItem('players', JSON.stringify(this.players))
    }
  },
  computed: {
    selectedPlayers() { 
      return this.players.filter(p => p.selected)
    },
    balancedTeams() {
      return balanceTeams(this.selectedPlayers)
    },
    teamValues() { 
      return this.balancedTeams.map(team => team.reduce((acc, player) => acc + player.value, 0))
    }
  }
}).mount('#app')